services:
  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile.dev
    restart: always
    ports:
      - "80:80" # support http redirect
      - "443:443"
    networks:
      - backend
    depends_on:
      - sanic
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/api.dev.conf:/etc/nginx/conf.d/api.conf:ro
      - ./nginx/www.dev.conf:/etc/nginx/conf.d/www.conf:ro
      - ./nginx/pgadmin.dev.conf:/etc/nginx/conf.d/pgadmin.conf:ro
      - ./client:/usr/share/nginx/html:ro
      - /etc/letsencrypt:/etc/letsencrypt
  sanic:
    build:
      context: ./sanic
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    expose:
      - 8000
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - backend
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    restart: always
    networks:
      - backend
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 30s
      retries: 3
      start_period: 10s
    volumes:
      - redis_data:/data
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:443"
    networks:
      - backend
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    networks:
      - backend
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  backend:
    driver: bridge

volumes:
  redis_data:
  postgres_data:
  pgadmin_data:
